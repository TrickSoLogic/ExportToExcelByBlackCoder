// <auto-generated />
using ExportExcel_in_ASPNetCore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExportToExcelByBlackCoder.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230130174005_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ExportExcel_in_ASPNetCore.Models.BlackCoder", b =>
                {
                    b.Property<int>("Test1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Test1"), 1L, 1);

                    b.Property<string>("Test2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Test3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Test4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Test5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Test6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Test7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Test8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Test9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Test1");

                    b.ToTable("blackcoder");
                });
#pragma warning restore 612, 618
        }
    }
}
